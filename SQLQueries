CREATE TABLE detailedtable(
	category_id integer,
	category_name varchar (20),
	title_and_year varchar (200),
	rental_rate numeric (4,2),
	film_id integer
);

--Query for looking up the empty detailed table.
SELECT * FROM detailedtable

CREATE TABLE summarytable(
	category_id integer,
	category_name varchar (20),
	total_rental_rate numeric
);

--Query for looking up the empty summary table.
SELECT * FROM summarytable

INSERT INTO detailedtable(
	category_id,
	category_name,
	title_and_year,
	rental_rate,
	film_id
)

SELECT category.category_id,category.name,CONCAT(film.title,' (',film.release_year,')'),film.rental_rate,film_category.film_id
FROM category
INNER JOIN film_category ON category.category_id = film_category.category_id
INNER JOIN film ON film_category.film_id = film.film_id
ORDER BY category_id ASC


--Query for looking up the now filled detailed table. 
SELECT * FROM detailedtable

--FUNCTION---
CREATE FUNCTION get_summarytable()
RETURNS TRIGGER AS $$
BEGIN
	DELETE FROM summarytable;
	INSERT INTO summarytable(
	SELECT category_id,category_name, SUM(rental_rate) AS rental_rate FROM detailedtable
	GROUP BY category_name,category_id
	HAVING SUM(detailedtable.rental_rate) >= 1
	ORDER BY category_name ASC);
RETURN NEW;
END; $$
LANGUAGE PLPGSQL;

--TRIGGER FUNCTION--
CREATE TRIGGER summary_trigger
AFTER INSERT ON detailedtable
FOR EACH ROW
EXECUTE PROCEDURE get_summarytable()

--PERFORM AN INSERT ON detailedtable to test the trigger function.
INSERT INTO detailedtable(category_id,category_name,title_and_year,rental_rate,film_id)
VALUES(1,'Action','TestTest',2.99,1002);

--SUMMARYTABLE SHOULD BE UPDATED.
SELECT * FROM summarytable


--PROCEDURE--
CREATE PROCEDURE refresh_table()
LANGUAGE PLPGSQL
AS $$
BEGIN
	INSERT INTO detailed(
	customer_id, -- customer
	first_name, -- customer
	last_name, -- customer
	email, -- customer
	rental_id, -- rental
	rental_date, -- rental
	return_date, -- rental
	staff_id  --rental
)
	SELECT 
		c.customer_id, c.first_name, c.last_name, c.email,
		r.rental_id, r.rental_date, r.return_date, r.staff_id
	FROM rental AS r 
	INNER JOIN customer AS c ON c.customer_id = r.customer_id;
END;$$



