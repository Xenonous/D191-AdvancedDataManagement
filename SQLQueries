--D191 Advanced Data Management
--BUSINESS QUESTION: WHAT FILM GENRE IS SOLD THE MOST?
-------------------------------------------------TABLE CREATION------------------------------------------------------
CREATE TABLE detailedtable(
	category_id integer, 
	category_name varchar (20),
	title_and_year varchar (200),
	rental_rate numeric (4,2),
	film_id integer
);


SELECT * FROM detailedtable --Query for looking up the empty detailed table.

CREATE TABLE summarytable(
	category_id integer,
	category_name varchar (20),
	total_rental_rate numeric
);


SELECT * FROM summarytable --Query for looking up the empty summary table.

-------------------------------------------------INSERTING DATA INTO DETAILEDTABLE---------------------------

INSERT INTO detailedtable(
	category_id,
	category_name,
	title_and_year,
	rental_rate,
	film_id
)

SELECT category.category_id,category.name,CONCAT(film.title,' (',film.release_year,')'),film.rental_rate,film_category.film_id
FROM category
INNER JOIN film_category ON category.category_id = film_category.category_id
INNER JOIN film ON film_category.film_id = film.film_id
ORDER BY category_id ASC

SELECT * FROM detailedtable --Query for looking up the now filled detailed table. 

-------------------------------------------------FUNCTION CREATION-----------------------------------------------
CREATE FUNCTION get_summarytable()
RETURNS TRIGGER AS $$
BEGIN
	DELETE FROM summarytable;
	INSERT INTO summarytable(
	SELECT category_id,category_name, SUM(rental_rate) AS rental_rate FROM detailedtable
	GROUP BY category_name,category_id
	HAVING SUM(detailedtable.rental_rate) >= 1
	ORDER BY category_name ASC);
RETURN NEW;
END; $$
LANGUAGE PLPGSQL;

-------------------------------------------------TRIGGER CREATION-------------------------------------------------
CREATE TRIGGER summary_trigger
AFTER INSERT ON detailedtable
FOR EACH ROW
EXECUTE PROCEDURE get_summarytable()

--------------------------------------------------------------------------------------------------------------------------
INSERT INTO detailedtable(category_id,category_name,title_and_year,rental_rate,film_id)  
VALUES(1,'Action','TestTest(2016)',2.99,1002);  --PERFORM AN INSERT ON detailedtable to test the trigger function.

SELECT * FROM summarytable --SUMMARYTABLE SHOULD BE UPDATED.


------------------------------------------------PROCEDURE  CREATION----------------------------------------------
CREATE PROCEDURE refresh()
LANGUAGE PLPGSQL
AS $$
BEGIN
	DELETE FROM detailedtable;
		
	INSERT INTO detailedtable(
		category_id,
		category_name,
		title_and_year,
		rental_rate,
		film_id
	)

	SELECT category.category_id,category.name,CONCAT(film.title,' (',film.release_year,')'),film.rental_rate,film_category.film_id
	FROM category
	INNER JOIN film_category ON category.category_id = film_category.category_id
	INNER JOIN film ON film_category.film_id = film.film_id
	ORDER BY category_id ASC;
END;$$

--------------------------------------------------------------------------------------------------------------------------
CALL refresh() --To execute the procedure
